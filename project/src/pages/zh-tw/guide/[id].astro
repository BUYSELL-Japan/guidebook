---
export async function getStaticPaths() {
  const { fetchGuideData } = await import('../../../utils/dataFetcher');
  
  try {
    const guideItems = await fetchGuideData();
    
    return guideItems.map((item) => ({
      params: { id: item.item_id },
      props: { guideData: item }
    }));
  } catch (error) {
    console.error('Error fetching guide data:', error);
    console.log('Returning empty paths due to fetch error - pages will show 404');
    return [];
  }
}

import { 
  getLocalizedText, 
  defaultLanguage
} from '../../../utils/language';
import LanguageSelector from '../../../components/LanguageSelector.astro';
import Layout from '../../../layouts/Layout.astro';

const currentLanguage = 'zh-tw';
const { guideData } = Astro.props;

const homeText = 'È¶ñÈ†Å';
const overviewText = 'Ê¶ÇË¶Å';
const detailInfoText = 'Ë©≥Á¥∞Ë≥áË®ä';
const highlightsText = '‰∫ÆÈªû';
const accessText = '‰∫§ÈÄö';
const viewOtherSpotsText = 'Êü•ÁúãÂÖ∂‰ªñÊôØÈªû';

// Pre-process description paragraphs
const descriptionParagraphs = (getLocalizedText(guideData, 'description_zh_tw', currentLanguage) || '')
  .split('\n')
  .filter(paragraph => paragraph.trim());
---



<Layout>
  <main class="guide-container">
    <!-- Language Selector -->
    <div class="language-selector-container">
      <LanguageSelector currentLanguage={currentLanguage} currentPath={"/guide/" + guideData.item_id + "/"} />
    </div>

    <article class="guide-article">
      <!-- Navigation -->
      <nav class="breadcrumb">
        <a href="/zh-tw/" class="breadcrumb-link">üè† {homeText}</a>
        <span class="breadcrumb-separator">‚Ä∫</span>
        <span class="breadcrumb-current">{getLocalizedText(guideData, 'name_zh_tw', currentLanguage)}</span>
      </nav>

      <!-- Header Section -->
      <header class="guide-header">
        <div class="header-content">
          <h1 class="main-title">{getLocalizedText(guideData, 'name_zh_tw', currentLanguage)}</h1>
          <p class="catchy-comment">{getLocalizedText(guideData, 'catchy_comment_zh_tw', currentLanguage)}</p>
        </div>
        <div class="header-wave"></div>
      </header>

      <!-- Main Image Section -->
      {guideData.main_image_url && (
        <section class="main-image-section">
          <div class="image-container">
            <img 
              src={guideData.main_image_url} 
              alt={getLocalizedText(guideData, 'name_zh_tw', currentLanguage)}
              class="main-image"
              onerror="this.parentElement.parentElement.style.display='none'"
            />
          </div>
        </section>
      )}

      <!-- Content Section -->
      <div class="content-wrapper">
        <!-- Summary Section -->
        <section class="summary-section">
          <div class="content-card">
            <h2 class="section-title">{overviewText}</h2>
            <p class="summary-text">{getLocalizedText(guideData, 'summary_zh_tw', currentLanguage)}</p>
          </div>
        </section>

        <!-- Detailed Description Section -->
        <section class="description-section">
          <div class="content-card">
            <h2 class="section-title">{detailInfoText}</h2>
            <div class="description-content">
              {descriptionParagraphs.map((paragraph) => (
                <p class="description-paragraph">{paragraph}</p>
              ))}
            </div>
          </div>
        </section>

        <!-- Highlights Section -->
        <section class="highlights-section">
          <h2 class="section-title highlights-title">{highlightsText}</h2>
          
          <div class="highlight-grid">
            <!-- Highlight 1 -->
            {(guideData.highlight_1_image_url || getLocalizedText(guideData, 'highlight_1_text_zh_tw', currentLanguage)) && (
              <div class="highlight-item">
                {guideData.highlight_1_image_url && (
                  <div class="highlight-image-container">
                    <img 
                      src={guideData.highlight_1_image_url} 
                      alt="Highlight 1"
                      class="highlight-image"
                      onerror="this.parentElement.style.display='none'"
                    />
                  </div>
                )}
                {getLocalizedText(guideData, 'highlight_1_text_zh_tw', currentLanguage) && (
                  <div class="highlight-content">
                    <p class="highlight-text">{getLocalizedText(guideData, 'highlight_1_text_zh_tw', currentLanguage)}</p>
                  </div>
                )}
              </div>
            )}

            <!-- Highlight 2 -->
            {(guideData.highlight_2_image_url || getLocalizedText(guideData, 'highlight_2_text_zh_tw', currentLanguage)) && (
              <div class="highlight-item">
                {guideData.highlight_2_image_url && (
                  <div class="highlight-image-container">
                    <img 
                      src={guideData.highlight_2_image_url} 
                      alt="Highlight 2"
                      class="highlight-image"
                      onerror="this.parentElement.style.display='none'"
                    />
                  </div>
                )}
                {getLocalizedText(guideData, 'highlight_2_text_zh_tw', currentLanguage) && (
                  <div class="highlight-content">
                    <p class="highlight-text">{getLocalizedText(guideData, 'highlight_2_text_zh_tw', currentLanguage)}</p>
                  </div>
                )}
              </div>
            )}
          </div>
        </section>

        <!-- Access Information Section -->
        <section class="address-section">
          <div class="content-card address-card">
            <h2 class="section-title">üìç {accessText}</h2>
            <p class="address-text">{getLocalizedText(guideData, 'address_zh_tw', currentLanguage)}</p>
          </div>
        </section>

        <!-- Navigation Section -->
        <section class="navigation-section">
          <div class="nav-card">
            <a href="/zh-tw/" class="back-button">
              <svg class="back-icon" width="20" height="20" viewBox="0 0 20 20" fill="none">
                <path d="M12.5 15L7.5 10L12.5 5" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
              </svg>
              {viewOtherSpotsText}
            </a>
          </div>
        </section>
      </div>
    </article>
  </main>
</Layout>

<style>
.guide-container {
  min-height: 100vh;
  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
  padding-bottom: 2rem;
}

.language-selector-container {
  position: fixed;
  top: 20px;
  right: 20px;
  z-index: 1000;
}

.guide-article {
  max-width: 1200px;
  margin: 0 auto;
  padding: 2rem 1rem;
  background: white;
  border-radius: 20px;
  box-shadow: 0 20px 40px rgba(0,0,0,0.1);
  margin-top: 2rem;
  position: relative;
  overflow: hidden;
}

.breadcrumb {
  display: flex;
  align-items: center;
  gap: 0.5rem;
  margin-bottom: 2rem;
  font-size: 0.9rem;
  color: #666;
}

.breadcrumb-link {
  color: #667eea;
  text-decoration: none;
  transition: color 0.3s ease;
}

.breadcrumb-link:hover {
  color: #764ba2;
}

.breadcrumb-separator {
  color: #ccc;
}

.breadcrumb-current {
  color: #333;
  font-weight: 500;
}

.guide-header {
  text-align: center;
  margin-bottom: 3rem;
  position: relative;
}

.header-content {
  position: relative;
  z-index: 2;
}

.main-title {
  font-size: 2.5rem;
  font-weight: 800;
  color: #333;
  margin-bottom: 1rem;
  line-height: 1.2;
}

.catchy-comment {
  font-size: 1.1rem;
  color: #666;
  margin: 0;
  font-style: italic;
}

.header-wave {
  position: absolute;
  bottom: -20px;
  left: 0;
  right: 0;
  height: 40px;
  background: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 1200 120' preserveAspectRatio='none'%3E%3Cpath d='M321.39,56.44c58-10.79,114.16-30.13,172-41.86,82.39-16.72,168.19-17.73,250.45-.39C823.78,31,906.67,72,985.66,92.83c70.05,18.48,146.53,26.09,214.34,3V0H0V27.35A600.21,600.21,0,0,0,321.39,56.44Z' fill='%23f8f9fa'/%3E%3C/svg%3E") repeat-x;
  background-size: 1200px 40px;
}

.main-image-section {
  margin-bottom: 3rem;
}

.image-container {
  border-radius: 15px;
  overflow: hidden;
  box-shadow: 0 10px 30px rgba(0,0,0,0.1);
}

.main-image {
  width: 100%;
  height: 400px;
  object-fit: cover;
  display: block;
}

.content-wrapper {
  display: flex;
  flex-direction: column;
  gap: 2rem;
}

.content-card {
  background: #f8f9fa;
  padding: 2rem;
  border-radius: 15px;
  border-left: 4px solid #667eea;
}

.section-title {
  font-size: 1.5rem;
  font-weight: 700;
  color: #333;
  margin-bottom: 1rem;
  display: flex;
  align-items: center;
  gap: 0.5rem;
}

.summary-text {
  font-size: 1.1rem;
  line-height: 1.8;
  color: #555;
  margin: 0;
}

.description-content {
  display: flex;
  flex-direction: column;
  gap: 1rem;
}

.description-paragraph {
  font-size: 1rem;
  line-height: 1.8;
  color: #555;
  margin: 0;
}

.highlights-section {
  background: linear-gradient(135deg, #f093fb 0%, #f5576c 100%);
  padding: 2rem;
  border-radius: 15px;
  color: white;
}

.highlights-title {
  color: white;
  text-align: center;
  margin-bottom: 2rem;
}

.highlight-grid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
  gap: 2rem;
}

.highlight-item {
  background: rgba(255,255,255,0.1);
  padding: 1.5rem;
  border-radius: 10px;
  backdrop-filter: blur(10px);
}

.highlight-image-container {
  margin-bottom: 1rem;
  border-radius: 8px;
  overflow: hidden;
}

.highlight-image {
  width: 100%;
  height: 200px;
  object-fit: cover;
  display: block;
}

.highlight-content {
  color: white;
}

.highlight-text {
  font-size: 1rem;
  line-height: 1.6;
  margin: 0;
}

.address-card {
  background: linear-gradient(135deg, #84fab0 0%, #8fd3f4 100%);
  color: white;
  border-left: none;
}

.address-card .section-title {
  color: white;
}

.address-text {
  font-size: 1.1rem;
  line-height: 1.8;
  margin: 0;
  color: white;
}

.navigation-section {
  text-align: center;
}

.nav-card {
  display: inline-block;
}

.back-button {
  display: inline-flex;
  align-items: center;
  gap: 0.5rem;
  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
  color: white;
  text-decoration: none;
  padding: 1rem 2rem;
  border-radius: 50px;
  font-weight: 600;
  transition: transform 0.3s ease, box-shadow 0.3s ease;
  box-shadow: 0 4px 15px rgba(102, 126, 234, 0.4);
}

.back-button:hover {
  transform: translateY(-2px);
  box-shadow: 0 8px 25px rgba(102, 126, 234, 0.6);
}

.back-icon {
  transition: transform 0.3s ease;
}

.back-button:hover .back-icon {
  transform: translateX(-3px);
}

@media (max-width: 768px) {
  .guide-container {
    padding: 1rem;
  }
  
  .guide-article {
    margin-top: 1rem;
    padding: 1.5rem;
  }
  
  .main-title {
    font-size: 2rem;
  }
  
  .main-image {
    height: 250px;
  }
  
  .content-card {
    padding: 1.5rem;
  }
  
  .highlight-grid {
    grid-template-columns: 1fr;
  }
  
  .language-selector-container {
    position: relative;
    top: auto;
    right: auto;
    margin-bottom: 1rem;
    text-align: right;
  }
}
</style>
