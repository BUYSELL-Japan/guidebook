---
export async function getStaticPaths() {
  const { fetchGuideData } = await import('../../utils/dataFetcher');
  
  try {
    const guideItems = await fetchGuideData();
    
    return guideItems.map((item) => ({
      params: { id: item.item_id },
      props: { guideData: item }
    }));
  } catch (error) {
    console.error('Error fetching guide data:', error);
    console.log('Returning empty paths due to fetch error - pages will show 404');
    return [];
  }
}

import { 
  getLocalizedText, 
  defaultLanguage
} from '../../utils/language';
import LanguageSelector from '../../components/LanguageSelector.astro';
import Layout from '../../layouts/Layout.astro';

const currentLanguage = 'ja';
const { guideData } = Astro.props;

const homeText = '„Éà„ÉÉ„Éó„Éö„Éº„Ç∏';
const overviewText = 'Ê¶ÇË¶Å';
const detailInfoText = 'Ë©≥Á¥∞ÊÉÖÂ†±';
const highlightsText = 'Ë¶ã„Å©„Åì„Çç';
const accessText = '„Ç¢„ÇØ„Çª„Çπ';
const viewOtherSpotsText = '‰ªñ„ÅÆ„Çπ„Éù„ÉÉ„Éà„ÇíË¶ã„Çã';

// Pre-process description paragraphs
const descriptionParagraphs = (getLocalizedText(guideData, 'description_ja', currentLanguage) || '')
  .split('\n')
  .filter(paragraph => paragraph.trim());
---

<Layout>
  <main class="guide-container">
    <!-- Language Selector -->
    <div class="language-selector-container">
      <LanguageSelector currentLanguage={currentLanguage} currentPath={`/guide/${guideData.item_id}/`} />
    </div>

    <article class="guide-article">
      <!-- „Éä„Éì„Ç≤„Éº„Ç∑„Éß„É≥ -->
      <nav class="breadcrumb">
        <a href="/" class="breadcrumb-link">üè† {homeText}</a>
        <span class="breadcrumb-separator">‚Ä∫</span>
        <span class="breadcrumb-current">{getLocalizedText(guideData, 'name_ja', currentLanguage)}</span>
      </nav>

      <!-- „Éò„ÉÉ„ÉÄ„Éº„Çª„ÇØ„Ç∑„Éß„É≥ -->
      <header class="guide-header">
        <div class="header-content">
          <h1 class="main-title">{getLocalizedText(guideData, 'name_ja', currentLanguage)}</h1>
          <p class="catchy-comment">{getLocalizedText(guideData, 'catchy_comment_ja', currentLanguage)}</p>
        </div>
        <div class="header-wave"></div>
      </header>

      <!-- „É°„Ç§„É≥ÁîªÂÉè„Çª„ÇØ„Ç∑„Éß„É≥ -->
      {guideData.main_image_url && (
        <section class="main-image-section">
          <div class="image-container">
            <img 
              src={guideData.main_image_url} 
              alt={getLocalizedText(guideData, 'name_ja', currentLanguage)}
              class="main-image"
              onerror="this.parentElement.parentElement.style.display='none'"
            />
          </div>
        </section>
      )}

      <!-- „Ç≥„É≥„ÉÜ„É≥„ÉÑ„Çª„ÇØ„Ç∑„Éß„É≥ -->
      <div class="content-wrapper">
        <!-- „Çµ„Éû„É™„Éº„Çª„ÇØ„Ç∑„Éß„É≥ -->
        <section class="summary-section">
          <div class="content-card">
            <h2 class="section-title">{overviewText}</h2>
            <p class="summary-text">{getLocalizedText(guideData, 'summary_ja', currentLanguage)}</p>
          </div>
        </section>

        <!-- Ë©≥Á¥∞Ë™¨Êòé„Çª„ÇØ„Ç∑„Éß„É≥ -->
        <section class="description-section">
          <div class="content-card">
            <h2 class="section-title">{detailInfoText}</h2>
            <div class="description-content">
              {descriptionParagraphs.map(paragraph => <p>{paragraph}</p>)}
            </div>
          </div>
        </section>

        <!-- „Éè„Ç§„É©„Ç§„Éà„Çª„ÇØ„Ç∑„Éß„É≥ -->
        <section class="highlights-section">
          <h2 class="section-title highlights-title">{highlightsText}</h2>
          
          <div class="highlight-grid">
            <!-- „Éè„Ç§„É©„Ç§„Éà1 -->
            {(guideData.highlight_1_image_url || getLocalizedText(guideData, 'highlight_1_text_ja', currentLanguage)) && (
              <div class="highlight-item">
                {guideData.highlight_1_image_url && (
                  <div class="highlight-image-container">
                    <img 
                      src={guideData.highlight_1_image_url} 
                      alt="„Éè„Ç§„É©„Ç§„Éà1"
                      class="highlight-image"
                      onerror="this.parentElement.style.display='none'"
                    />
                  </div>
                )}
                {getLocalizedText(guideData, 'highlight_1_text_ja', currentLanguage) && (
                  <div class="highlight-content">
                    <p class="highlight-text">{getLocalizedText(guideData, 'highlight_1_text_ja', currentLanguage)}</p>
                  </div>
                )}
              </div>
            )}

            <!-- „Éè„Ç§„É©„Ç§„Éà2 -->
            {(guideData.highlight_2_image_url || getLocalizedText(guideData, 'highlight_2_text_ja', currentLanguage)) && (
              <div class="highlight-item">
                {guideData.highlight_2_image_url && (
                  <div class="highlight-image-container">
                    <img 
                      src={guideData.highlight_2_image_url} 
                      alt="„Éè„Ç§„É©„Ç§„Éà2"
                      class="highlight-image"
                      onerror="this.parentElement.style.display='none'"
                    />
                  </div>
                )}
                {getLocalizedText(guideData, 'highlight_2_text_ja', currentLanguage) && (
                  <div class="highlight-content">
                    <p class="highlight-text">{getLocalizedText(guideData, 'highlight_2_text_ja', currentLanguage)}</p>
                  </div>
                )}
              </div>
            )}
          </div>
        </section>

        <!-- „Ç¢„ÇØ„Çª„ÇπÊÉÖÂ†±„Çª„ÇØ„Ç∑„Éß„É≥ -->
        <section class="address-section">
          <div class="content-card address-card">
            <h2 class="section-title">üìç {accessText}</h2>
            <p class="address-text">{getLocalizedText(guideData, 'address_ja', currentLanguage)}</p>
          </div>
        </section>

        <!-- „Éä„Éì„Ç≤„Éº„Ç∑„Éß„É≥„Çª„ÇØ„Ç∑„Éß„É≥ -->
        <section class="navigation-section">
          <div class="nav-card">
            <a href="/" class="back-button">
              ‚Üê {viewOtherSpotsText}
            </a>
          </div>
        </section>
      </div>
    </article>
  </main>
</Layout>

<style>
  :global(html) {
    scroll-behavior: smooth;
  }

  .language-selector-container {
    position: fixed;
    top: 1rem;
    right: 1rem;
    z-index: 1000;
  }
  .guide-container {
    min-height: 100vh;
    background: linear-gradient(135deg, #e0f7fa 0%, #b2ebf2 50%, #4dd0e1 100%);
  }

  .guide-article {
    max-width: 1200px;
    margin: 0 auto;
  }

  .breadcrumb {
    background: rgba(255, 255, 255, 0.9);
    padding: 1rem 2rem;
    display: flex;
    align-items: center;
    font-size: 0.9rem;
    backdrop-filter: blur(10px);
  }

  .breadcrumb-link {
    color: #00838f;
    text-decoration: none;
    transition: color 0.3s ease;
  }

  .breadcrumb-link:hover {
    color: #4dd0e1;
  }

  .breadcrumb-separator {
    margin: 0 0.8rem;
    color: #666;
  }

  .breadcrumb-current {
    color: #424242;
    font-weight: 500;
  }

  .guide-header {
    background: linear-gradient(135deg, #26c6da 0%, #4dd0e1 50%, #80deea 100%);
    color: white;
    padding: 4rem 2rem 6rem;
    text-align: center;
    position: relative;
    overflow: hidden;
  }

  .header-content {
    position: relative;
    z-index: 2;
  }

  .main-title {
    font-size: clamp(2rem, 5vw, 3.5rem);
    font-weight: 800;
    margin: 0 0 1rem 0;
    letter-spacing: 0.02em;
    text-shadow: 0 2px 10px rgba(0, 0, 0, 0.3);
  }

  .catchy-comment {
    font-size: clamp(1.1rem, 2.5vw, 1.3rem);
    margin: 0;
    opacity: 0.95;
    font-weight: 300;
    letter-spacing: 0.05em;
  }

  .header-wave {
    position: absolute;
    bottom: -1px;
    left: 0;
    width: 100%;
    height: 60px;
    background: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 1200 120'%3E%3Cpath d='M0,50 Q300,10 600,50 T1200,50 L1200,120 L0,120 Z' fill='%23ffffff'/%3E%3C/svg%3E") no-repeat center bottom;
    background-size: cover;
  }

  .main-image-section {
    padding: 2rem;
    background: white;
  }

  .image-container {
    max-width: 800px;
    margin: 0 auto;
    border-radius: 20px;
    overflow: hidden;
    box-shadow: 0 20px 60px rgba(0, 0, 0, 0.15);
    transition: transform 0.3s ease;
  }

  .image-container:hover {
    transform: translateY(-5px);
  }

  .main-image {
    width: 100%;
    height: auto;
    max-height: 500px;
    object-fit: cover;
    display: block;
  }

  .content-wrapper {
    background: white;
    padding: 2rem;
  }

  .content-card {
    background: white;
    border-radius: 15px;
    padding: 2.5rem;
    margin: 2rem auto;
    max-width: 800px;
    box-shadow: 0 10px 30px rgba(0, 188, 212, 0.1);
    border-left: 5px solid #4dd0e1;
  }

  .section-title {
    color: #006064;
    font-size: 1.8rem;
    font-weight: 700;
    margin: 0 0 1.5rem 0;
    position: relative;
    display: inline-block;
  }

  .section-title::after {
    content: '';
    position: absolute;
    bottom: -5px;
    left: 0;
    width: 100%;
    height: 3px;
    background: linear-gradient(90deg, #4dd0e1, #00bcd4);
    border-radius: 2px;
  }

  .summary-text {
    font-size: 1.1rem;
    line-height: 1.8;
    color: #424242;
    margin: 0;
  }

  .description-content {
    font-size: 1rem;
    line-height: 1.8;
    color: #424242;
  }

  .description-content p {
    margin: 0 0 1.2rem 0;
  }

  .description-content p:last-child {
    margin-bottom: 0;
  }

  .highlights-section {
    max-width: 1000px;
    margin: 3rem auto;
    padding: 0 2rem;
  }

  .highlights-title {
    text-align: center;
    font-size: 2.2rem;
    margin-bottom: 3rem;
  }

  .highlight-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(400px, 1fr));
    gap: 3rem;
    margin-top: 2rem;
  }

  .highlight-item {
    background: white;
    border-radius: 20px;
    overflow: hidden;
    box-shadow: 0 15px 35px rgba(0, 188, 212, 0.1);
    transition: transform 0.3s ease, box-shadow 0.3s ease;
  }

  .highlight-item:hover {
    transform: translateY(-10px);
    box-shadow: 0 25px 50px rgba(0, 188, 212, 0.2);
  }

  .highlight-image-container {
    height: 250px;
    overflow: hidden;
  }

  .highlight-image {
    width: 100%;
    height: 100%;
    object-fit: cover;
    transition: transform 0.3s ease;
  }

  .highlight-item:hover .highlight-image {
    transform: scale(1.05);
  }

  .highlight-content {
    padding: 2rem;
  }

  .highlight-text {
    font-size: 1rem;
    line-height: 1.7;
    color: #424242;
    margin: 0;
  }

  .address-section {
    max-width: 800px;
    margin: 3rem auto;
  }

  .address-card {
    background: linear-gradient(135deg, #e0f7fa, #f3e5f5);
    border-left: 5px solid #ff7043;
  }

  .address-text {
    font-size: 1.1rem;
    line-height: 1.8;
    color: #424242;
    margin: 0;
    font-weight: 500;
  }

  .navigation-section {
    max-width: 800px;
    margin: 3rem auto;
    text-align: center;
  }

  .nav-card {
    background: white;
    border-radius: 15px;
    padding: 2rem;
    box-shadow: 0 10px 30px rgba(0, 188, 212, 0.1);
  }

  .back-button {
    display: inline-block;
    background: linear-gradient(135deg, #4dd0e1, #00bcd4);
    color: white;
    text-decoration: none;
    padding: 1rem 2rem;
    border-radius: 25px;
    font-weight: 600;
    font-size: 1.1rem;
    transition: all 0.3s ease;
    box-shadow: 0 5px 15px rgba(77, 208, 225, 0.3);
  }

  .back-button:hover {
    transform: translateY(-2px);
    box-shadow: 0 8px 25px rgba(77, 208, 225, 0.4);
    background: linear-gradient(135deg, #00bcd4, #0097a7);
  }

  @media (max-width: 768px) {
    .breadcrumb {
      padding: 1rem;
      font-size: 0.8rem;
    }

    .guide-header {
      padding: 3rem 1rem 4rem;
    }

    .main-image-section {
      padding: 1rem;
    }

    .content-wrapper {
      padding: 1rem;
    }

    .content-card {
      padding: 2rem 1.5rem;
      margin: 1.5rem auto;
    }

    .highlight-grid {
      grid-template-columns: 1fr;
      gap: 2rem;
    }

    .highlight-item {
      margin: 0;
    }

    .highlights-section {
      padding: 0 1rem;
    }
  }

  @media (max-width: 480px) {
    .highlight-grid {
      grid-template-columns: 1fr;
    }
    
    .highlight-item {
      min-width: unset;
    }

    .breadcrumb {
      flex-direction: column;
      align-items: flex-start;
      gap: 0.5rem;
    }

    .breadcrumb-separator {
      display: none;
    }
  }
</style>